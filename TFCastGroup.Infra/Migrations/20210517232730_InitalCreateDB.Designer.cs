// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TFCastGroup.Infra.Configuration;

namespace TFCastGroup.Infra.Migrations
{
    [DbContext(typeof(ContextCastGroup))]
    [Migration("20210517232730_InitalCreateDB")]
    partial class InitalCreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TFCastGroup.Domain.Model.Categoria", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint")
                        .HasColumnName("codigo");

                    b.Property<long?>("CursoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.HasIndex("CursoId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Codigo = 4L,
                            Descricao = "Comportamental"
                        },
                        new
                        {
                            Codigo = 1L,
                            Descricao = "Programacao"
                        },
                        new
                        {
                            Codigo = 2L,
                            Descricao = "Qualidade"
                        },
                        new
                        {
                            Codigo = 3L,
                            Descricao = "Processos"
                        });
                });

            modelBuilder.Entity("TFCastGroup.Domain.Model.Curso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_termino");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<long>("IdCategoria")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantidadeAlunosPorTurma")
                        .HasColumnType("int")
                        .HasColumnName("qtd_alunos_por_turma");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("TFCastGroup.Domain.Model.Categoria", b =>
                {
                    b.HasOne("TFCastGroup.Domain.Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("TFCastGroup.Domain.Model.Curso", b =>
                {
                    b.HasOne("TFCastGroup.Domain.Model.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
